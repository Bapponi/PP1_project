INFO  14:32:27,172 - Compiling source file: C:\Users\Aleksandar\Desktop\Za faks\7 semestar\Programski prevodioci\The PP projekat\workspace\BABABUJI_MJCompiler3\test\program.mj
INFO  14:32:27,202 - #4 program
INFO  14:32:27,202 - #47 MJProgram
INFO  14:32:27,203 - #8 const
INFO  14:32:27,203 - #47 bool
INFO  14:32:27,203 - #47 nesto
INFO  14:32:27,204 - #33 =
INFO  14:32:27,204 - #19 false
INFO  14:32:27,204 - #38 ,
INFO  14:32:27,205 - #47 drugo
INFO  14:32:27,205 - #33 =
INFO  14:32:27,205 - #19 true
INFO  14:32:27,205 - #36 ;
INFO  14:32:27,206 - #8 const
INFO  14:32:27,206 - #47 int
INFO  14:32:27,206 - #47 savo
INFO  14:32:27,207 - #33 =
INFO  14:32:27,207 - #48 30
INFO  14:32:27,207 - #38 ,
INFO  14:32:27,207 - #47 pika
INFO  14:32:27,208 - #33 =
INFO  14:32:27,208 - #48 3
INFO  14:32:27,208 - #36 ;
INFO  14:32:27,208 - #8 const
INFO  14:32:27,208 - #47 char
INFO  14:32:27,208 - #47 kako
INFO  14:32:27,208 - #33 =
INFO  14:32:27,208 - #49 'c'
INFO  14:32:27,208 - #38 ,
INFO  14:32:27,208 - #47 sika
INFO  14:32:27,208 - #33 =
INFO  14:32:27,209 - #49 'e'
INFO  14:32:27,209 - #36 ;
INFO  14:32:27,209 - #47 int
INFO  14:32:27,209 - #47 babo
INFO  14:32:27,209 - #42 [
INFO  14:32:27,209 - #43 ]
INFO  14:32:27,209 - #38 ,
INFO  14:32:27,210 - #47 papo
INFO  14:32:27,210 - #42 [
INFO  14:32:27,210 - #43 ]
INFO  14:32:27,210 - #38 ,
INFO  14:32:27,211 - #47 kapo
INFO  14:32:27,211 - #36 ;
INFO  14:32:27,211 - #47 char
INFO  14:32:27,212 - #47 saso
INFO  14:32:27,212 - #36 ;
INFO  14:32:27,212 - #6 class
INFO  14:32:27,212 - #47 NekaTamo
INFO  14:32:27,212 - #16 extends
INFO  14:32:27,212 - #47 Nema
INFO  14:32:27,212 - #44 {
INFO  14:32:27,212 - #47 char
INFO  14:32:27,212 - #47 abo
INFO  14:32:27,212 - #36 ;
INFO  14:32:27,212 - #45 }
INFO  14:32:27,214 - #6 class
INFO  14:32:27,214 - #47 OnaMoja
INFO  14:32:27,214 - #16 extends
INFO  14:32:27,214 - #47 NekaTamo
INFO  14:32:27,214 - #44 {
INFO  14:32:27,214 - #47 int
INFO  14:32:27,214 - #47 sabo
INFO  14:32:27,214 - #42 [
INFO  14:32:27,214 - #43 ]
INFO  14:32:27,214 - #36 ;
INFO  14:32:27,214 - #44 {
INFO  14:32:27,214 - #15 void
INFO  14:32:27,215 - #47 imeFunkcije
INFO  14:32:27,215 - #40 (
INFO  14:32:27,215 - #41 )
INFO  14:32:27,217 - #44 {
INFO  14:32:27,217 - #14 return
INFO  14:32:27,217 - #36 ;
INFO  14:32:27,217 - #45 }
INFO  14:32:27,217 - #47 int
INFO  14:32:27,218 - #47 imeMetode
INFO  14:32:27,218 - #40 (
INFO  14:32:27,218 - #47 int
INFO  14:32:27,218 - #47 pera
INFO  14:32:27,218 - #42 [
INFO  14:32:27,218 - #43 ]
INFO  14:32:27,218 - #38 ,
INFO  14:32:27,219 - #47 char
INFO  14:32:27,219 - #47 zika
INFO  14:32:27,219 - #41 )
INFO  14:32:27,219 - #47 char
INFO  14:32:27,219 - #47 popo
INFO  14:32:27,219 - #36 ;
INFO  14:32:27,219 - #44 {
INFO  14:32:27,219 - #47 babo
INFO  14:32:27,219 - #42 [
INFO  14:32:27,220 - #48 3
INFO  14:32:27,220 - #43 ]
INFO  14:32:27,222 - #33 =
INFO  14:32:27,223 - #48 8
INFO  14:32:27,223 - #36 ;
INFO  14:32:27,223 - #47 saso
INFO  14:32:27,224 - #33 =
INFO  14:32:27,224 - #49 'f'
INFO  14:32:27,224 - #36 ;
INFO  14:32:27,224 - #47 NekaTamo
INFO  14:32:27,224 - #42 [
INFO  14:32:27,224 - #21 -
INFO  14:32:27,224 - #48 9
INFO  14:32:27,224 - #20 +
INFO  14:32:27,224 - #48 8
INFO  14:32:27,224 - #21 -
INFO  14:32:27,225 - #48 7
INFO  14:32:27,225 - #22 *
INFO  14:32:27,225 - #48 5
INFO  14:32:27,225 - #43 ]
INFO  14:32:27,227 - #39 .
INFO  14:32:27,227 - #47 papo
INFO  14:32:27,227 - #42 [
INFO  14:32:27,227 - #21 -
INFO  14:32:27,227 - #48 9
INFO  14:32:27,227 - #43 ]
INFO  14:32:27,227 - #33 =
INFO  14:32:27,227 - #21 -
INFO  14:32:27,227 - #48 9
INFO  14:32:27,227 - #36 ;
INFO  14:32:27,227 - #9 if
INFO  14:32:27,227 - #40 (
INFO  14:32:27,227 - #48 3
INFO  14:32:27,227 - #31 &&
INFO  14:32:27,227 - #48 4
INFO  14:32:27,227 - #41 )
INFO  14:32:27,227 - #44 {
INFO  14:32:27,227 - #47 kapo
INFO  14:32:27,227 - #34 ++
INFO  14:32:27,227 - #36 ;
INFO  14:32:27,227 - #45 }
INFO  14:32:27,229 - #9 if
INFO  14:32:27,229 - #40 (
INFO  14:32:27,229 - #48 1
INFO  14:32:27,229 - #31 &&
INFO  14:32:27,229 - #48 2
INFO  14:32:27,229 - #41 )
INFO  14:32:27,229 - #44 {
INFO  14:32:27,229 - #47 kapo
INFO  14:32:27,229 - #35 --
INFO  14:32:27,229 - #36 ;
INFO  14:32:27,229 - #45 }
INFO  14:32:27,229 - #7 else
INFO  14:32:27,229 - #44 {
INFO  14:32:27,229 - #17 continue
INFO  14:32:27,229 - #36 ;
INFO  14:32:27,229 - #45 }
INFO  14:32:27,230 - #10 while
INFO  14:32:27,230 - #40 (
INFO  14:32:27,230 - #48 1
INFO  14:32:27,230 - #32 ||
INFO  14:32:27,230 - #48 2
INFO  14:32:27,230 - #28 >=
INFO  14:32:27,230 - #48 3
INFO  14:32:27,230 - #32 ||
INFO  14:32:27,230 - #48 5
INFO  14:32:27,230 - #26 !=
INFO  14:32:27,230 - #48 6
INFO  14:32:27,231 - #41 )
INFO  14:32:27,231 - #44 {
INFO  14:32:27,231 - #14 return
INFO  14:32:27,231 - #21 -
INFO  14:32:27,231 - #48 9
INFO  14:32:27,231 - #23 /
INFO  14:32:27,231 - #11 new
INFO  14:32:27,231 - #47 NekaTamo
INFO  14:32:27,231 - #40 (
INFO  14:32:27,231 - #48 9
INFO  14:32:27,231 - #41 )
INFO  14:32:27,231 - #36 ;
INFO  14:32:27,232 - #45 }
INFO  14:32:27,232 - #13 read
INFO  14:32:27,232 - #40 (
INFO  14:32:27,232 - #47 babo
INFO  14:32:27,232 - #42 [
INFO  14:32:27,232 - #21 -
INFO  14:32:27,232 - #48 9
INFO  14:32:27,232 - #43 ]
INFO  14:32:27,232 - #41 )
INFO  14:32:27,232 - #36 ;
INFO  14:32:27,232 - #13 read
INFO  14:32:27,232 - #40 (
INFO  14:32:27,232 - #47 sasssis
INFO  14:32:27,232 - #41 )
INFO  14:32:27,232 - #36 ;
INFO  14:32:27,232 - #12 print
INFO  14:32:27,232 - #40 (
INFO  14:32:27,232 - #21 -
INFO  14:32:27,232 - #48 9
INFO  14:32:27,232 - #38 ,
INFO  14:32:27,232 - #48 2
INFO  14:32:27,232 - #41 )
INFO  14:32:27,232 - #36 ;
INFO  14:32:27,232 - #39 .
INFO  14:32:27,233 - #18 foreach
INFO  14:32:27,233 - #40 (
INFO  14:32:27,233 - #47 in
INFO  14:32:27,234 - #46 =>
INFO  14:32:27,234 - #5 break
INFO  14:32:27,234 - #36 ;
INFO  14:32:27,234 - #41 )
INFO  14:32:27,234 - #36 ;
INFO  14:32:27,234 - #47 imeFunkcije
INFO  14:32:27,234 - #40 (
INFO  14:32:27,234 - #41 )
INFO  14:32:27,235 - #36 ;
INFO  14:32:27,235 - #14 return
INFO  14:32:27,235 - #48 3
INFO  14:32:27,235 - #36 ;
INFO  14:32:27,235 - #12 print
INFO  14:32:27,235 - #40 (
INFO  14:32:27,235 - #47 imeFunkcije
INFO  14:32:27,235 - #40 (
INFO  14:32:27,235 - #41 )
INFO  14:32:27,235 - #41 )
INFO  14:32:27,236 - #36 ;
INFO  14:32:27,236 - #45 }
INFO  14:32:27,236 - #47 char
INFO  14:32:27,236 - #47 bananaFunkcija
INFO  14:32:27,236 - #40 (
INFO  14:32:27,236 - #41 )
INFO  14:32:27,236 - #44 {
INFO  14:32:27,236 - #14 return
INFO  14:32:27,236 - #49 'a'
INFO  14:32:27,236 - #36 ;
INFO  14:32:27,236 - #45 }
INFO  14:32:27,236 - #45 }
INFO  14:32:27,236 - #45 }
INFO  14:32:27,236 - #44 {
INFO  14:32:27,236 - #15 void
INFO  14:32:27,236 - #47 main
INFO  14:32:27,236 - #40 (
INFO  14:32:27,236 - #41 )
INFO  14:32:27,236 - #44 {
INFO  14:32:27,236 - #45 }
INFO  14:32:27,236 - #45 }
INFO  14:32:27,240 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  AllDeclarationsList(
    AllDeclarationsList(
      AllDeclarationsList(
        AllDeclarationsList(
          AllDeclarationsList(
            AllDeclarationsList(
              AllDeclarationsList(
                NoAllDecl(
                ) [NoAllDecl]
                ConstDeclarations(
                  ConstDecl(
                    ConstDeclTypeName(
                      Type(
                       bool
                      ) [Type]
                    ) [ConstDeclTypeName]
                   nesto
                    AllConstBool(
                      Bool(
                      ) [Bool]
                    ) [AllConstBool]
                    AllConstDeclBodyList(
                      NoConstDeclBodyList(
                      ) [NoConstDeclBodyList]
                      ConstDeclBody(
                       drugo
                        AllConstBool(
                          Bool(
                          ) [Bool]
                        ) [AllConstBool]
                      ) [ConstDeclBody]
                    ) [AllConstDeclBodyList]
                  ) [ConstDecl]
                ) [ConstDeclarations]
              ) [AllDeclarationsList]
              ConstDeclarations(
                ConstDecl(
                  ConstDeclTypeName(
                    Type(
                     int
                    ) [Type]
                  ) [ConstDeclTypeName]
                 savo
                  AllConstNum(
                    Num(
                     30
                    ) [Num]
                  ) [AllConstNum]
                  AllConstDeclBodyList(
                    NoConstDeclBodyList(
                    ) [NoConstDeclBodyList]
                    ConstDeclBody(
                     pika
                      AllConstNum(
                        Num(
                         3
                        ) [Num]
                      ) [AllConstNum]
                    ) [ConstDeclBody]
                  ) [AllConstDeclBodyList]
                ) [ConstDecl]
              ) [ConstDeclarations]
            ) [AllDeclarationsList]
            ConstDeclarations(
              ConstDecl(
                ConstDeclTypeName(
                  Type(
                   char
                  ) [Type]
                ) [ConstDeclTypeName]
               kako
                AllConstChar(
                  Char(
                   'c'
                  ) [Char]
                ) [AllConstChar]
                AllConstDeclBodyList(
                  NoConstDeclBodyList(
                  ) [NoConstDeclBodyList]
                  ConstDeclBody(
                   sika
                    AllConstChar(
                      Char(
                       'e'
                      ) [Char]
                    ) [AllConstChar]
                  ) [ConstDeclBody]
                ) [AllConstDeclBodyList]
              ) [ConstDecl]
            ) [ConstDeclarations]
          ) [AllDeclarationsList]
          VarDeclarations(
            VarDecl(
              VarDeclTypeName(
                Type(
                 int
                ) [Type]
              ) [VarDeclTypeName]
             babo
              SingleBrackets(
              ) [SingleBrackets]
              AllVarDeclBodyList(
                AllVarDeclBodyList(
                  NoVarDeclBodyList(
                  ) [NoVarDeclBodyList]
                  VarDeclBody(
                   papo
                    SingleBrackets(
                    ) [SingleBrackets]
                  ) [VarDeclBody]
                ) [AllVarDeclBodyList]
                VarDeclBody(
                 kapo
                  NoBrackets(
                  ) [NoBrackets]
                ) [VarDeclBody]
              ) [AllVarDeclBodyList]
            ) [VarDecl]
          ) [VarDeclarations]
        ) [AllDeclarationsList]
        VarDeclarations(
          VarDecl(
            VarDeclTypeName(
              Type(
               char
              ) [Type]
            ) [VarDeclTypeName]
           saso
            NoBrackets(
            ) [NoBrackets]
            NoVarDeclBodyList(
            ) [NoVarDeclBodyList]
          ) [VarDecl]
        ) [VarDeclarations]
      ) [AllDeclarationsList]
      ClassDeclarations(
        ClassDecl(
         NekaTamo
          SingleExtendsType(
            Type(
             Nema
            ) [Type]
          ) [SingleExtendsType]
          AllVarDeclList(
            NoVarDeclList(
            ) [NoVarDeclList]
            VarDecl(
              VarDeclTypeName(
                Type(
                 char
                ) [Type]
              ) [VarDeclTypeName]
             abo
              NoBrackets(
              ) [NoBrackets]
              NoVarDeclBodyList(
              ) [NoVarDeclBodyList]
            ) [VarDecl]
          ) [AllVarDeclList]
          NoClassDeclBody(
          ) [NoClassDeclBody]
        ) [ClassDecl]
      ) [ClassDeclarations]
    ) [AllDeclarationsList]
    ClassDeclarations(
      ClassDecl(
       OnaMoja
        SingleExtendsType(
          Type(
           NekaTamo
          ) [Type]
        ) [SingleExtendsType]
        AllVarDeclList(
          NoVarDeclList(
          ) [NoVarDeclList]
          VarDecl(
            VarDeclTypeName(
              Type(
               int
              ) [Type]
            ) [VarDeclTypeName]
           sabo
            SingleBrackets(
            ) [SingleBrackets]
            NoVarDeclBodyList(
            ) [NoVarDeclBodyList]
          ) [VarDecl]
        ) [AllVarDeclList]
        SingleClassDeclBody(
          AllMethodDeclList(
            AllMethodDeclList(
              AllMethodDeclList(
                NoMethodDeclListList(
                ) [NoMethodDeclListList]
                MethodDecl(
                  MethodTypeName(
                    VoidPart(
                    ) [VoidPart]
                   imeFunkcije
                  ) [MethodTypeName]
                  NoFormParsListB(
                  ) [NoFormParsListB]
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  AllStatementList(
                    NoStatementList(
                    ) [NoStatementList]
                    StatementReturn(
                      NoExprListB(
                      ) [NoExprListB]
                    ) [StatementReturn]
                  ) [AllStatementList]
                ) [MethodDecl]
              ) [AllMethodDeclList]
              MethodDecl(
                MethodTypeName(
                  TypePart(
                    Type(
                     int
                    ) [Type]
                  ) [TypePart]
                 imeMetode
                ) [MethodTypeName]
                SingleFormParsListB(
                  AllFormPars(
                    SingleFormPars(
                      FormParsBody(
                        FormParsBodyType(
                          Type(
                           int
                          ) [Type]
                        ) [FormParsBodyType]
                       pera
                        SingleBrackets(
                        ) [SingleBrackets]
                      ) [FormParsBody]
                    ) [SingleFormPars]
                    FormParsBody(
                      FormParsBodyType(
                        Type(
                         char
                        ) [Type]
                      ) [FormParsBodyType]
                     zika
                      NoBrackets(
                      ) [NoBrackets]
                    ) [FormParsBody]
                  ) [AllFormPars]
                ) [SingleFormParsListB]
                AllVarDeclList(
                  NoVarDeclList(
                  ) [NoVarDeclList]
                  VarDecl(
                    VarDeclTypeName(
                      Type(
                       char
                      ) [Type]
                    ) [VarDeclTypeName]
                   popo
                    NoBrackets(
                    ) [NoBrackets]
                    NoVarDeclBodyList(
                    ) [NoVarDeclBodyList]
                  ) [VarDecl]
                ) [AllVarDeclList]
                AllStatementList(
                  AllStatementList(
                    AllStatementList(
                      AllStatementList(
                        AllStatementList(
                          AllStatementList(
                            AllStatementList(
                              AllStatementList(
                                AllStatementList(
                                  AllStatementList(
                                    AllStatementList(
                                      AllStatementList(
                                        AllStatementList(
                                          NoStatementList(
                                          ) [NoStatementList]
                                          StatementDesign(
                                            DesignatorStatementAssign(
                                              Designator(
                                               babo
                                                AllDesignatorBodyList(
                                                  NoDesignatorBodyList(
                                                  ) [NoDesignatorBodyList]
                                                  DesignatorBodyTwo(
                                                    Expr(
                                                      NoMinusListB(
                                                      ) [NoMinusListB]
                                                      Term(
                                                        FactorNum(
                                                         3
                                                        ) [FactorNum]
                                                        NoTermBodyList(
                                                        ) [NoTermBodyList]
                                                      ) [Term]
                                                      NoExprBodyList(
                                                      ) [NoExprBodyList]
                                                    ) [Expr]
                                                  ) [DesignatorBodyTwo]
                                                ) [AllDesignatorBodyList]
                                              ) [Designator]
                                              Assignop(
                                              ) [Assignop]
                                              Expr(
                                                NoMinusListB(
                                                ) [NoMinusListB]
                                                Term(
                                                  FactorNum(
                                                   8
                                                  ) [FactorNum]
                                                  NoTermBodyList(
                                                  ) [NoTermBodyList]
                                                ) [Term]
                                                NoExprBodyList(
                                                ) [NoExprBodyList]
                                              ) [Expr]
                                            ) [DesignatorStatementAssign]
                                          ) [StatementDesign]
                                        ) [AllStatementList]
                                        StatementDesign(
                                          DesignatorStatementAssign(
                                            Designator(
                                             saso
                                              NoDesignatorBodyList(
                                              ) [NoDesignatorBodyList]
                                            ) [Designator]
                                            Assignop(
                                            ) [Assignop]
                                            Expr(
                                              NoMinusListB(
                                              ) [NoMinusListB]
                                              Term(
                                                FactorChar(
                                                 'f'
                                                ) [FactorChar]
                                                NoTermBodyList(
                                                ) [NoTermBodyList]
                                              ) [Term]
                                              NoExprBodyList(
                                              ) [NoExprBodyList]
                                            ) [Expr]
                                          ) [DesignatorStatementAssign]
                                        ) [StatementDesign]
                                      ) [AllStatementList]
                                      StatementDesign(
                                        DesignatorStatementAssign(
                                          Designator(
                                           NekaTamo
                                            AllDesignatorBodyList(
                                              AllDesignatorBodyList(
                                                AllDesignatorBodyList(
                                                  NoDesignatorBodyList(
                                                  ) [NoDesignatorBodyList]
                                                  DesignatorBodyTwo(
                                                    Expr(
                                                      SingleMinusListB(
                                                      ) [SingleMinusListB]
                                                      Term(
                                                        FactorNum(
                                                         9
                                                        ) [FactorNum]
                                                        NoTermBodyList(
                                                        ) [NoTermBodyList]
                                                      ) [Term]
                                                      AllExprBodyList(
                                                        AllExprBodyList(
                                                          NoExprBodyList(
                                                          ) [NoExprBodyList]
                                                          ExprBody(
                                                            Addop(
                                                            ) [Addop]
                                                            Term(
                                                              FactorNum(
                                                               8
                                                              ) [FactorNum]
                                                              NoTermBodyList(
                                                              ) [NoTermBodyList]
                                                            ) [Term]
                                                          ) [ExprBody]
                                                        ) [AllExprBodyList]
                                                        ExprBody(
                                                          AddopDerived1(
                                                          ) [AddopDerived1]
                                                          Term(
                                                            FactorNum(
                                                             7
                                                            ) [FactorNum]
                                                            AllTermBodyList(
                                                              NoTermBodyList(
                                                              ) [NoTermBodyList]
                                                              TermBody(
                                                                Mulop(
                                                                ) [Mulop]
                                                                FactorNum(
                                                                 5
                                                                ) [FactorNum]
                                                              ) [TermBody]
                                                            ) [AllTermBodyList]
                                                          ) [Term]
                                                        ) [ExprBody]
                                                      ) [AllExprBodyList]
                                                    ) [Expr]
                                                  ) [DesignatorBodyTwo]
                                                ) [AllDesignatorBodyList]
                                                DesignatorBodyOne(
                                                 papo
                                                ) [DesignatorBodyOne]
                                              ) [AllDesignatorBodyList]
                                              DesignatorBodyTwo(
                                                Expr(
                                                  SingleMinusListB(
                                                  ) [SingleMinusListB]
                                                  Term(
                                                    FactorNum(
                                                     9
                                                    ) [FactorNum]
                                                    NoTermBodyList(
                                                    ) [NoTermBodyList]
                                                  ) [Term]
                                                  NoExprBodyList(
                                                  ) [NoExprBodyList]
                                                ) [Expr]
                                              ) [DesignatorBodyTwo]
                                            ) [AllDesignatorBodyList]
                                          ) [Designator]
                                          Assignop(
                                          ) [Assignop]
                                          Expr(
                                            SingleMinusListB(
                                            ) [SingleMinusListB]
                                            Term(
                                              FactorNum(
                                               9
                                              ) [FactorNum]
                                              NoTermBodyList(
                                              ) [NoTermBodyList]
                                            ) [Term]
                                            NoExprBodyList(
                                            ) [NoExprBodyList]
                                          ) [Expr]
                                        ) [DesignatorStatementAssign]
                                      ) [StatementDesign]
                                    ) [AllStatementList]
                                    StatementIf(
                                      ConditionSingle(
                                        CondTermAll(
                                          CondTermSingle(
                                            SingleCondFact(
                                              Expr(
                                                NoMinusListB(
                                                ) [NoMinusListB]
                                                Term(
                                                  FactorNum(
                                                   3
                                                  ) [FactorNum]
                                                  NoTermBodyList(
                                                  ) [NoTermBodyList]
                                                ) [Term]
                                                NoExprBodyList(
                                                ) [NoExprBodyList]
                                              ) [Expr]
                                            ) [SingleCondFact]
                                          ) [CondTermSingle]
                                          SingleCondFact(
                                            Expr(
                                              NoMinusListB(
                                              ) [NoMinusListB]
                                              Term(
                                                FactorNum(
                                                 4
                                                ) [FactorNum]
                                                NoTermBodyList(
                                                ) [NoTermBodyList]
                                              ) [Term]
                                              NoExprBodyList(
                                              ) [NoExprBodyList]
                                            ) [Expr]
                                          ) [SingleCondFact]
                                        ) [CondTermAll]
                                      ) [ConditionSingle]
                                      StatementStatementList(
                                        AllStatementList(
                                          NoStatementList(
                                          ) [NoStatementList]
                                          StatementDesign(
                                            DesignatorStatementInc(
                                              Designator(
                                               kapo
                                                NoDesignatorBodyList(
                                                ) [NoDesignatorBodyList]
                                              ) [Designator]
                                            ) [DesignatorStatementInc]
                                          ) [StatementDesign]
                                        ) [AllStatementList]
                                      ) [StatementStatementList]
                                    ) [StatementIf]
                                  ) [AllStatementList]
                                  StatementElse(
                                    ConditionSingle(
                                      CondTermAll(
                                        CondTermSingle(
                                          SingleCondFact(
                                            Expr(
                                              NoMinusListB(
                                              ) [NoMinusListB]
                                              Term(
                                                FactorNum(
                                                 1
                                                ) [FactorNum]
                                                NoTermBodyList(
                                                ) [NoTermBodyList]
                                              ) [Term]
                                              NoExprBodyList(
                                              ) [NoExprBodyList]
                                            ) [Expr]
                                          ) [SingleCondFact]
                                        ) [CondTermSingle]
                                        SingleCondFact(
                                          Expr(
                                            NoMinusListB(
                                            ) [NoMinusListB]
                                            Term(
                                              FactorNum(
                                               2
                                              ) [FactorNum]
                                              NoTermBodyList(
                                              ) [NoTermBodyList]
                                            ) [Term]
                                            NoExprBodyList(
                                            ) [NoExprBodyList]
                                          ) [Expr]
                                        ) [SingleCondFact]
                                      ) [CondTermAll]
                                    ) [ConditionSingle]
                                    StatementStatementList(
                                      AllStatementList(
                                        NoStatementList(
                                        ) [NoStatementList]
                                        StatementDesign(
                                          DesignatorStatementDec(
                                            Designator(
                                             kapo
                                              NoDesignatorBodyList(
                                              ) [NoDesignatorBodyList]
                                            ) [Designator]
                                          ) [DesignatorStatementDec]
                                        ) [StatementDesign]
                                      ) [AllStatementList]
                                    ) [StatementStatementList]
                                    StatementStatementList(
                                      AllStatementList(
                                        NoStatementList(
                                        ) [NoStatementList]
                                        StatementContinue(
                                        ) [StatementContinue]
                                      ) [AllStatementList]
                                    ) [StatementStatementList]
                                  ) [StatementElse]
                                ) [AllStatementList]
                                StatementWhile(
                                  ConditionAll(
                                    ConditionAll(
                                      ConditionSingle(
                                        CondTermSingle(
                                          SingleCondFact(
                                            Expr(
                                              NoMinusListB(
                                              ) [NoMinusListB]
                                              Term(
                                                FactorNum(
                                                 1
                                                ) [FactorNum]
                                                NoTermBodyList(
                                                ) [NoTermBodyList]
                                              ) [Term]
                                              NoExprBodyList(
                                              ) [NoExprBodyList]
                                            ) [Expr]
                                          ) [SingleCondFact]
                                        ) [CondTermSingle]
                                      ) [ConditionSingle]
                                      CondTermSingle(
                                        DoubleCondFact(
                                          Expr(
                                            NoMinusListB(
                                            ) [NoMinusListB]
                                            Term(
                                              FactorNum(
                                               2
                                              ) [FactorNum]
                                              NoTermBodyList(
                                              ) [NoTermBodyList]
                                            ) [Term]
                                            NoExprBodyList(
                                            ) [NoExprBodyList]
                                          ) [Expr]
                                          RelopDerived3(
                                          ) [RelopDerived3]
                                          Expr(
                                            NoMinusListB(
                                            ) [NoMinusListB]
                                            Term(
                                              FactorNum(
                                               3
                                              ) [FactorNum]
                                              NoTermBodyList(
                                              ) [NoTermBodyList]
                                            ) [Term]
                                            NoExprBodyList(
                                            ) [NoExprBodyList]
                                          ) [Expr]
                                        ) [DoubleCondFact]
                                      ) [CondTermSingle]
                                    ) [ConditionAll]
                                    CondTermSingle(
                                      DoubleCondFact(
                                        Expr(
                                          NoMinusListB(
                                          ) [NoMinusListB]
                                          Term(
                                            FactorNum(
                                             5
                                            ) [FactorNum]
                                            NoTermBodyList(
                                            ) [NoTermBodyList]
                                          ) [Term]
                                          NoExprBodyList(
                                          ) [NoExprBodyList]
                                        ) [Expr]
                                        RelopDerived1(
                                        ) [RelopDerived1]
                                        Expr(
                                          NoMinusListB(
                                          ) [NoMinusListB]
                                          Term(
                                            FactorNum(
                                             6
                                            ) [FactorNum]
                                            NoTermBodyList(
                                            ) [NoTermBodyList]
                                          ) [Term]
                                          NoExprBodyList(
                                          ) [NoExprBodyList]
                                        ) [Expr]
                                      ) [DoubleCondFact]
                                    ) [CondTermSingle]
                                  ) [ConditionAll]
                                  StatementStatementList(
                                    AllStatementList(
                                      NoStatementList(
                                      ) [NoStatementList]
                                      StatementReturn(
                                        SingleExprListB(
                                          Expr(
                                            SingleMinusListB(
                                            ) [SingleMinusListB]
                                            Term(
                                              FactorNum(
                                               9
                                              ) [FactorNum]
                                              AllTermBodyList(
                                                NoTermBodyList(
                                                ) [NoTermBodyList]
                                                TermBody(
                                                  MulopDerived1(
                                                  ) [MulopDerived1]
                                                  FactorNew(
                                                    Type(
                                                     NekaTamo
                                                    ) [Type]
                                                    NewTypeBodyTwo(
                                                      SingleActParsListB(
                                                        SingleActPars(
                                                          Expr(
                                                            NoMinusListB(
                                                            ) [NoMinusListB]
                                                            Term(
                                                              FactorNum(
                                                               9
                                                              ) [FactorNum]
                                                              NoTermBodyList(
                                                              ) [NoTermBodyList]
                                                            ) [Term]
                                                            NoExprBodyList(
                                                            ) [NoExprBodyList]
                                                          ) [Expr]
                                                        ) [SingleActPars]
                                                      ) [SingleActParsListB]
                                                    ) [NewTypeBodyTwo]
                                                  ) [FactorNew]
                                                ) [TermBody]
                                              ) [AllTermBodyList]
                                            ) [Term]
                                            NoExprBodyList(
                                            ) [NoExprBodyList]
                                          ) [Expr]
                                        ) [SingleExprListB]
                                      ) [StatementReturn]
                                    ) [AllStatementList]
                                  ) [StatementStatementList]
                                ) [StatementWhile]
                              ) [AllStatementList]
                              StatementRead(
                                Designator(
                                 babo
                                  AllDesignatorBodyList(
                                    NoDesignatorBodyList(
                                    ) [NoDesignatorBodyList]
                                    DesignatorBodyTwo(
                                      Expr(
                                        SingleMinusListB(
                                        ) [SingleMinusListB]
                                        Term(
                                          FactorNum(
                                           9
                                          ) [FactorNum]
                                          NoTermBodyList(
                                          ) [NoTermBodyList]
                                        ) [Term]
                                        NoExprBodyList(
                                        ) [NoExprBodyList]
                                      ) [Expr]
                                    ) [DesignatorBodyTwo]
                                  ) [AllDesignatorBodyList]
                                ) [Designator]
                              ) [StatementRead]
                            ) [AllStatementList]
                            StatementRead(
                              Designator(
                               sasssis
                                NoDesignatorBodyList(
                                ) [NoDesignatorBodyList]
                              ) [Designator]
                            ) [StatementRead]
                          ) [AllStatementList]
                          StatementPrint(
                            Expr(
                              SingleMinusListB(
                              ) [SingleMinusListB]
                              Term(
                                FactorNum(
                                 9
                                ) [FactorNum]
                                NoTermBodyList(
                                ) [NoTermBodyList]
                              ) [Term]
                              NoExprBodyList(
                              ) [NoExprBodyList]
                            ) [Expr]
                            AllNumConstListB(
                             2
                            ) [AllNumConstListB]
                          ) [StatementPrint]
                        ) [AllStatementList]
                        StatementForeach(
                          Foreach(
                          ) [Foreach]
                         in
                          StatementBreak(
                          ) [StatementBreak]
                        ) [StatementForeach]
                      ) [AllStatementList]
                      StatementDesign(
                        DesignatorStatementAct(
                          Designator(
                           imeFunkcije
                            NoDesignatorBodyList(
                            ) [NoDesignatorBodyList]
                          ) [Designator]
                          NoActParsListB(
                          ) [NoActParsListB]
                        ) [DesignatorStatementAct]
                      ) [StatementDesign]
                    ) [AllStatementList]
                    StatementReturn(
                      SingleExprListB(
                        Expr(
                          NoMinusListB(
                          ) [NoMinusListB]
                          Term(
                            FactorNum(
                             3
                            ) [FactorNum]
                            NoTermBodyList(
                            ) [NoTermBodyList]
                          ) [Term]
                          NoExprBodyList(
                          ) [NoExprBodyList]
                        ) [Expr]
                      ) [SingleExprListB]
                    ) [StatementReturn]
                  ) [AllStatementList]
                  StatementPrint(
                    Expr(
                      NoMinusListB(
                      ) [NoMinusListB]
                      Term(
                        FactorDesignatorAll(
                          Designator(
                           imeFunkcije
                            NoDesignatorBodyList(
                            ) [NoDesignatorBodyList]
                          ) [Designator]
                          SingleFactorDesignatorBodyListB(
                            FactorDesignatorBody(
                              NoActParsListB(
                              ) [NoActParsListB]
                            ) [FactorDesignatorBody]
                          ) [SingleFactorDesignatorBodyListB]
                        ) [FactorDesignatorAll]
                        NoTermBodyList(
                        ) [NoTermBodyList]
                      ) [Term]
                      NoExprBodyList(
                      ) [NoExprBodyList]
                    ) [Expr]
                    NoNumConstListB(
                    ) [NoNumConstListB]
                  ) [StatementPrint]
                ) [AllStatementList]
              ) [MethodDecl]
            ) [AllMethodDeclList]
            MethodDecl(
              MethodTypeName(
                TypePart(
                  Type(
                   char
                  ) [Type]
                ) [TypePart]
               bananaFunkcija
              ) [MethodTypeName]
              NoFormParsListB(
              ) [NoFormParsListB]
              NoVarDeclList(
              ) [NoVarDeclList]
              AllStatementList(
                NoStatementList(
                ) [NoStatementList]
                StatementReturn(
                  SingleExprListB(
                    Expr(
                      NoMinusListB(
                      ) [NoMinusListB]
                      Term(
                        FactorChar(
                         'a'
                        ) [FactorChar]
                        NoTermBodyList(
                        ) [NoTermBodyList]
                      ) [Term]
                      NoExprBodyList(
                      ) [NoExprBodyList]
                    ) [Expr]
                  ) [SingleExprListB]
                ) [StatementReturn]
              ) [AllStatementList]
            ) [MethodDecl]
          ) [AllMethodDeclList]
        ) [SingleClassDeclBody]
      ) [ClassDecl]
    ) [ClassDeclarations]
  ) [AllDeclarationsList]
  AllMethodDeclList(
    NoMethodDeclListList(
    ) [NoMethodDeclListList]
    MethodDecl(
      MethodTypeName(
        VoidPart(
        ) [VoidPart]
       main
      ) [MethodTypeName]
      NoFormParsListB(
      ) [NoFormParsListB]
      NoVarDeclList(
      ) [NoVarDeclList]
      NoStatementList(
      ) [NoStatementList]
    ) [MethodDecl]
  ) [AllMethodDeclList]
) [Program]
INFO  14:32:27,242 - ===================================
INFO  14:32:27,244 - Deklarisana konstanta drugo na liniji 3
INFO  14:32:27,244 - Deklarisana konstanta nesto na liniji 3
INFO  14:32:27,244 - Deklarisana konstanta pika na liniji 4
INFO  14:32:27,244 - Deklarisana konstanta savo na liniji 4
INFO  14:32:27,244 - Deklarisana konstanta sika na liniji 5
INFO  14:32:27,244 - Deklarisana konstanta kako na liniji 5
INFO  14:32:27,244 - Deklarisana promenljiva papo na liniji 7
INFO  14:32:27,244 - Deklarisana promenljiva kapo na liniji 7
INFO  14:32:27,244 - Deklarisana promenljiva babo na liniji 7
INFO  14:32:27,244 - Deklarisana promenljiva saso na liniji 8
ERROR 14:32:27,244 - Semanticka greska na liniji 10: tip Nema ne postoji!
ERROR 14:32:27,244 - Nije pronadjen tip Nema u tabeli simbola! 
ERROR 14:32:27,244 - Semanticka greska na liniji 10: unutrašnja klasa Nema ne postoji!
INFO  14:32:27,245 - Deklarisana promenljiva abo na liniji 11
INFO  14:32:27,245 - Deklarisana klasa NekaTamo na liniji 10
INFO  14:32:27,245 - Deklarisana promenljiva sabo na liniji 15
INFO  14:32:27,245 - Obradjuje se funkcija imeFunkcije na liniji 19
INFO  14:32:27,245 - Trenutna metoda jeste void tipa te return naredba ne mora da ima expr
INFO  14:32:27,245 - Return je u funkciji na liniji 3
INFO  14:32:27,245 - Obradjuje se funkcija imeMetode na liniji 23
INFO  14:32:27,245 - Deklarisan parametar funkcije pera na liniji 23
INFO  14:32:27,245 - Deklarisan parametar funkcije zika na liniji 23
INFO  14:32:27,245 - Deklarisana promenljiva popo na liniji 23
INFO  14:32:27,245 - Expr je int tipa u nizu na liniji 7
INFO  14:32:27,245 - Designator je promenljiva ili klasa: babo na liniji 25
INFO  14:32:27,245 - Expr je istog tipa kao i designator.  na liniji 25
INFO  14:32:27,245 - Designator je promenljiva ili klasa: saso na liniji 26
INFO  14:32:27,245 - Expr je istog tipa kao i designator.  na liniji 26
INFO  14:32:27,245 - Addop-uju se int-ovi sto je ok na liniji 28
INFO  14:32:27,245 - Mulop-uju se int-ovi sto je ok na liniji 28
INFO  14:32:27,245 - Addop-uju se int-ovi sto je ok na liniji 28
INFO  14:32:27,245 - Minus je ispred int-a sto je ok na liniji 28
INFO  14:32:27,245 - Expr je int tipa u nizu na liniji 28
INFO  14:32:27,245 - Promenljiva: papo je metoda ili polje klase na liniji 28
INFO  14:32:27,245 - Minus je ispred int-a sto je ok na liniji 28
INFO  14:32:27,245 - Expr je int tipa u nizu na liniji 28
INFO  14:32:27,245 - Minus je ispred int-a sto je ok na liniji 28
INFO  14:32:27,245 - Designator je promenljiva ili klasa: NekaTamo na liniji 28
INFO  14:32:27,247 - Obradjuje se inkrement nad integer-om: kapo na liniji 29
INFO  14:32:27,247 - Obradjuje se dekrement nad integer-om: kapo na liniji 30
ERROR 14:32:27,247 - Semanticka greska na liniji 0 : continue nije u while ili foreach petlji!
INFO  14:32:27,247 - Expr-i su istog tipa u relacionom izrazu na liniji 12
INFO  14:32:27,247 - Expr-i su istog tipa u relacionom izrazu na liniji 22
INFO  14:32:27,247 - Minus je ispred int-a sto je ok na liniji 61
INFO  14:32:27,247 - Pravi se nova instanca klase: NekaTamo na liniji 31
INFO  14:32:27,247 - Mulop-uju se int-ovi sto je ok na liniji 31
INFO  14:32:27,247 - Tip izraza u return naredbi se slaze sa tipom povratne vrednosti funkcije na liniji 31
INFO  14:32:27,247 - Return je u funkciji na liniji 31
INFO  14:32:27,247 - Minus je ispred int-a sto je ok na liniji 32
INFO  14:32:27,247 - Expr je int tipa u nizu na liniji 32
INFO  14:32:27,247 - Čita se promenljiva: babo na liniji 32
ERROR 14:32:27,247 - Greska na liniji 33 : ime sasssis nije deklarisano! 
ERROR 14:32:27,247 - Semantička greška na liniji 33 : designator sasssis nije postojeca promenljiva! 
INFO  14:32:27,247 - Minus je ispred int-a sto je ok na liniji 34
INFO  14:32:27,247 - Expr je tipa int ili char.  na liniji 34
INFO  14:32:27,247 - Break je u while ili foreach petlji 
INFO  14:32:27,247 - Obradjuje se funkcija: imeFunkcije na liniji 38
INFO  14:32:27,247 - Tip izraza u return naredbi se slaze sa tipom povratne vrednosti funkcije na liniji 3
INFO  14:32:27,247 - Return je u funkciji na liniji 3
INFO  14:32:27,247 - Pronadjen poziv funkcije imeFunkcije na liniji 41
INFO  14:32:27,247 - Expr je tipa int ili char.  na liniji 8
INFO  14:32:27,247 - Obradjuje se funkcija bananaFunkcija na liniji 44
INFO  14:32:27,247 - Tip izraza u return naredbi se slaze sa tipom povratne vrednosti funkcije na liniji 3
INFO  14:32:27,247 - Return je u funkciji na liniji 3
INFO  14:32:27,247 - Deklarisana klasa OnaMoja na liniji 14
INFO  14:32:27,247 - Obradjuje se funkcija main na liniji 53
INFO  14:32:27,247 -  Broj poziva print funkcije = 2
INFO  14:32:27,247 -  Deklarisanih promenljivih ima = 9
INFO  14:32:27,247 -  U programu ima 6 konstanti
INFO  14:32:27,247 -  U programu ima 2 klasa
INFO  14:32:27,247 -  Deklarisanih metoda ima = 4
INFO  14:32:27,247 - Parsiranje NIJE uspesno zavrseno!
